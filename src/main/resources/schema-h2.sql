
   DROP TABLE IF EXISTS ADM_PERSONA;
   CREATE TABLE ADM_PERSONA
      (	NUM_LICENCIA INTEGER NOT NULL,
   	COD_PERSONA BIGINT NOT NULL,
   	NOMBRES VARCHAR2(200 ) NOT NULL,
   	COD_TIPO_EMPLEO VARCHAR2(8 ) NOT NULL,
   	CATEGORIA VARCHAR2(1 ) NOT NULL,
   	NOMBRE1 VARCHAR2(100 ) NOT NULL,
   	NOMBRE2 VARCHAR2(50 ) NOT NULL,
   	APELLIDOPATERNO VARCHAR2(20 ) NOT NULL,
   	APELLIDOMATERNO VARCHAR2(20 ) NOT NULL,
   	COD_ESTADO_PERSONA VARCHAR2(8 ) NOT NULL,
   	FECHA_NACIMIENTO DATE NOT NULL,
   	COD_PAIS VARCHAR2(10 ) NOT NULL,
   	PAIS_LOCAL VARCHAR2(1 ) NOT NULL,
   	AUD_VERSION INTEGER NOT NULL);

   DROP TABLE IF EXISTS ADM_PERSONA_IDENTIFICACION;
   CREATE TABLE ADM_PERSONA_IDENTIFICACION
      (	NUM_LICENCIA INTEGER,
   	COD_PERSONA BIGINT NOT NULL ,
   	COD_TIPO_IFICACION VARCHAR2(8 ) NOT NULL ,
   	IDENTIFICACION VARCHAR2(30 ) NOT NULL ,
   	PREFERIDO VARCHAR2(1 ) NOT NULL ,
   	FECHA_CADUCIDAD DATE,
   	AUD_VERSION INTEGER,
   	CONSTRAINT SYS_C_SNAP$_5443IDEXPER_PK PRIMARY KEY (COD_PERSONA, COD_TIPO_IFICACION));

 DROP TABLE IF EXISTS ADM_CLIENTE;
   CREATE TABLE ADM_CLIENTE
      (	NUM_LICENCIA INTEGER,
   	COD_EMPRESA VARCHAR2(8 ),
   	COD_PRODUCTO VARCHAR2(8 ),
   	COD_PERSONA BIGINT,
   	TIPO_CLIENTE VARCHAR2(3 ),
   	SEC_PERSONA_TIPO_CLIENTE INTEGER,
   	FECHA_INGRESO DATE,
   	FECHA_SALIDA DATE,
   	ESTADO_FID_BEN VARCHAR2(3 ),
   	ESTADO_PARTICIPE VARCHAR2(1 ),
   	NUMERO_CUENTA VARCHAR2(30 ));

 DROP TABLE IF EXISTS ADM_PRODUCTO;
   CREATE TABLE ADM_PRODUCTO
      (	NUM_LICENCIA INTEGER,
   	COD_EMPRESA VARCHAR2(15 ),
   	COD_PRODUCTO VARCHAR2(15 ),
   	COD_TIPO_PRODUCTO VARCHAR2(15 ),
   	COD_ESTADO_PRODUCTO VARCHAR2(15 ),
   	NOMBRE VARCHAR2(100 ),
   	HABILITADO_BE VARCHAR2(1 ) DEFAULT 'S',
   	AUD_VERSION INTEGER DEFAULT 1,
   	COD_MONEDA VARCHAR2(15 ),
   	INACTIVAR_TMP VARCHAR2(1 ) DEFAULT 'N',
   	DETALLAR_PARTICIPACION VARCHAR2(1 ) DEFAULT 'N',
   	TIPO_ACTUALIZACION VARCHAR2(3 ) DEFAULT 'CON',
   	HABILITADO_INFO_CTAS_BANCARIAS VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_INVERSIONES VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_CONTABLE VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_DOCUMENTOS VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_PROYECTOS_INMO VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_INMUEBLES VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_BIE_MUEBLES VARCHAR2(1 ) DEFAULT 'N',
   	MANEJA_OPERACIONES VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_INFO_BIENES VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_MOVIMIENTOS_PARTIC VARCHAR2(1 ) DEFAULT 'N',
   	HABILITADO_REPORTES VARCHAR2(1 ) DEFAULT 'N',
   	FECHA_CORTE_CIERRE DATE,
   	GLN VARCHAR2(100),
   	TIEMPO_VALIDEZ_NPE NUMBER(3,0),
   	CONSTRAINT PK_ADM_PRODUCTO
   	PRIMARY KEY (NUM_LICENCIA, COD_EMPRESA, COD_PRODUCTO));

 DROP TABLE IF EXISTS FID_INTENCION_APORTE_BE;
   CREATE TABLE FID_INTENCION_APORTE_BE
      (	NUM_LICENCIA INTEGER,
   	COD_EMPRESA VARCHAR2(8 ),
   	COD_PRODUCTO VARCHAR2(8 ),
   	SEC_INTENCION BIGINT,
   	COD_PERSONA BIGINT,
   	CUENTA_PARTICIPE VARCHAR2(20 ),
   	ESTADO VARCHAR2(3 ),
   	MONTO NUMBER(10,2),
   	COD_MONEDA VARCHAR2(15 ),
   	FECHA_SOLICITUD TIMESTAMP (6),
   	FECHA_VENCIMIENTO TIMESTAMP (6),
   	NPE VARCHAR2(36 ),
   	AUD_USUARIO_INGRESO VARCHAR2(30 ),
   	AUD_FECHA_INGRESO TIMESTAMP (6) DEFAULT sysdate,
   	AUD_IP_INGRESO VARCHAR2(30 ),
   	AUD_COD_CANAL_INGRESO VARCHAR2(8 ),
   	AUD_VERSION INTEGER DEFAULT 1,
   	CONSTRAINT PK_FID_INTENCION_APORTE_BE
    PRIMARY KEY (NUM_LICENCIA, COD_EMPRESA, COD_PRODUCTO, SEC_INTENCION));

 DROP TABLE IF EXISTS TRA_CFG_CREDEN_ENTIDAD_FINANC;
   CREATE TABLE TRA_CFG_CREDEN_ENTIDAD_FINANC
       (	NUM_LICENCIA INTEGER,
    	COD_TIPO_ENTIDAD VARCHAR2(8 ),
    	COD_ENTIDAD VARCHAR2(8 ),
    	COD_ACCESO VARCHAR2(100 ),
    	TOKEN_ACCESO BLOB NOT NULL,
    	AUD_USUARIO_INGRESO VARCHAR2(30 ),
    	AUD_FECHA_INGRESO TIMESTAMP (6) DEFAULT sysdate,
    	AUD_IP_INGRESO VARCHAR2(30 ),
    	AUD_COD_CANAL_INGRESO VARCHAR2(8 ),
    	AUD_VERSION INTEGER DEFAULT 1,
    	CONSTRAINT PK_TRA_CFG_CREDEN_ENTIDAD_FINA
        PRIMARY KEY (NUM_LICENCIA, COD_TIPO_ENTIDAD, COD_ENTIDAD));

 DROP TABLE IF EXISTS AUD_INTERFAZ_LOG;
   CREATE TABLE AUD_INTERFAZ_LOG
      (	ID BIGINT NOT NULL,
   	USUARIO VARCHAR2(20 ),
   	OPERACION VARCHAR2(200 ),
   	FONDO VARCHAR2(200 ),
   	PARTICIPE VARCHAR2(200 ),
   	TRAMA_PEDIDO VARCHAR2(4000 ),
   	TRAMA_RESPUESTA VARCHAR2(4000 ) NOT NULL,
   	ESTADO VARCHAR2(2 ) NOT NULL,
   	MENSAJE VARCHAR2(200 ) NOT NULL,
   	FECHA_HORA_REG TIMESTAMP (6) NOT NULL,
   	IP VARCHAR2(100 ) NOT NULL,
   	CONSTRAINT AUD_INTERFAZ_LOG_PK
    PRIMARY KEY (ID));

 DROP TABLE IF EXISTS TES_V_TIPO_FORMA_PAGO;
  CREATE TABLE TES_V_TIPO_FORMA_PAGO
     (	NUM_LICENCIA INTEGER,
  	COD_TIPO_FORMA_PAGO VARCHAR2(6 ),
  	NOMBRE VARCHAR2(30 ),
  	TIPO_FORMA_PAGO VARCHAR2(3 ),
  	DIAS_EFECTIVIZA_FORMA_PAGO BIGINT);

 DROP TABLE IF EXISTS FD_NOTIFICACION_APORTE_BE;
  CREATE TABLE FD_NOTIFICACION_APORTE_BE
     (	NUM_LICENCIA INTEGER NOT NULL,
  	COD_EMPRESA VARCHAR2(15 ) NOT NULL,
  	COD_PRODUCTO VARCHAR2(15 ) NOT NULL,
  	SEC_NOTIFICACION BIGINT PRIMARY KEY NOT NULL,
  	COD_PERSONA BIGINT NOT NULL,
  	NUMERO_CUENTA VARCHAR2(30 ) NOT NULL,
  	MONTO NUMBER(10,2) NOT NULL,
  	COD_MONEDA VARCHAR2(15 ) NOT NULL,
  	FECHA_HORA_APORTE TIMESTAMP (6) NOT NULL,
  	FECHA_HORA_REG TIMESTAMP (6) NOT NULL,
  	COD_FORMA_PAGO VARCHAR2(6 ) NOT NULL,
  	NPE VARCHAR2(40 ),
  	ESTADO VARCHAR2(3 ) NOT NULL,
  	REFERENCIA VARCHAR2(100),
  	COD_TIPO_ENTIDAD VARCHAR2(8 ) NOT NULL,
    COD_ENTIDAD VARCHAR2(8 ) NOT NULL,
    CONSTRAINT CK_ESTADO_NOTIFICACION_APORTE
  	CHECK (ESTADO in ('ING','CNF','PRO')));